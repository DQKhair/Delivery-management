@model PagedList.IPagedList<Delivery.Models.DonHang_TimKiemTheoTenNG_Result>
@using PagedList.Mvc;
@{ ViewBag.Title = "Danh sách đơn hàng";
   Layout = "~/Views/Shared/_Layout.cshtml"; }
<div class="container" style="background-color: #F2F2F2; padding: 50px;">

    <div class="d-flex justify-content-between mb-3">
        <h3 class="fw-bold">Danh sách đơn hàng</h3>
        <form class="d-flex" role="search">
            <input name="searchString" class="form-control me-2" type="text" placeholder="Tìm kiếm tên người gửi" aria-label="Search">
            <button class="btn btn-success" type="submit"><i class="fa-solid fa-magnifying-glass"></i></button>
        </form>
    </div>
    <div class="form-horizontal" style="background-color: white; padding: 30px; border-radius: 1rem">
        <div class="">
            <table class="table table-hover">
                <tr>
                    <th>
                        @Html.DisplayName("Mã đơn hàng")
                    </th>
                    <th>
                        @Html.DisplayName("Người gửi")
                    </th>
                    <th>
                        @Html.DisplayName("Địa chỉ người gửi")
                    </th>
                    <th>
                        @Html.DisplayName("Người nhận")
                    </th>
                    <th>
                        @Html.DisplayName("Địa chỉ người nhận")
                    </th>
                    <th>
                        @Html.DisplayName("Trạng thái")
                    </th>
                    <th class="text-center">
                    </th>
                </tr>

                @foreach (var item in Model)
                {
                    <tr>
                        <td style="width: 12%">
                            <p>@Html.DisplayFor(model => item.MaDonHang)</p>
                        </td>
                        <td>
                            <p>@Html.DisplayFor(model => item.NguoiGui)</p>
                        </td>
                        <td>
                            <p>@Html.DisplayFor(model => item.Tu)</p>
                        </td>
                        <td>
                            <p>@Html.DisplayFor(model => item.NguoiNhan)</p>
                        </td>
                        <td style="width: 20%">
                            <p>@Html.DisplayFor(model => item.DiaChiNguoiNhan)/@Html.DisplayFor(model => item.DiaChiPhuong)/@Html.DisplayFor(model => item.DiaChiQuan)/@Html.DisplayFor(model => item.DiaChiThanhPho)</p>
                        </td>
                        <td>
                            @{ int trangThai = Convert.ToInt32(Html.DisplayFor(model => item.TrangThai).ToString());
                                switch (trangThai)
                                {
                                    case 1:
                                        // code block
                                        <p>Chờ xử lý</p> break;
                                    case 2:
                                        // code block
                                        <p>Đã nhận</p> break;
                                    case 3:
                                        // code block
                                        <p>Đã phân phối</p> break;
                                    case 4:
                                        // code block
                                        <p>Shipper đã nhận đơn</p> break;
                                    case 5:
                                        // code block
                                        <p>Đã lấy hàng</p> break;
                                    case 6:
                                        // code block
                                        <p>Đang giao hàng</p> break;
                                    case 7:
                                        // code block
                                        <p>Đã giao</p> break;
                                    default:
                                        // code block
                                        <p>Không tồn tại</p> break;
                                } }
                        </td>
                        <td class="text-center" style="width: 10%;">
                            @Html.ActionLink("Chi tiết", "Details", new { id = @item.MaDonHang }, new { @class = "btn btn-outline-success" })
                        </td>
                    </tr>
                }
            </table>
        </div>
    </div>
    <!-- Thêm phân trang vào -->
    <div class="my-2">
        Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount
    </div>
    @if (Model.PageCount > 1)
    {
        <nav class=my-2>
            <ul class="pagination">
                @if (Model.HasPreviousPage)
                 {
                    <li class="page-item"><a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1 })">«</a></li> }
                else
                {
                    <li class="page-item disabled"><a class="page-link" href="#">«</a></li>                }

                @for (int i = 1; i <= Model.PageCount; i++)
                 {
                    if (i == Model.PageNumber)
                    {
                        <li class="page-item active"><a class="page-link" href="#">@i <span class="visually-hidden">(current)</span></a></li> }
                    else
                    {
                        <li class="page-item"><a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a></li>                    }
                    }

                 @if (Model.HasNextPage)
                  {
                    <li class="page-item"><a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1 })">»</a></li> }
                  else
                  {
                    <li class="page-item disabled"><a class="page-link" href="#">»</a></li>                }
            </ul>
     </nav>}
</div>
